{"mappings":"gfACAA,EAAA,aAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,IAAKL,SAASC,cAAc,oBAG9BH,EAAKC,KAAKO,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAEC,iBAGF,IAFA,IAAMN,EAAQO,OAAOX,EAAKI,MAAMQ,OAC1BN,EAASK,OAAOX,EAAKM,OAAOM,OACzBC,EAAQ,EAAGA,EAAQP,EAAQO,IAAS,CAC3BC,MAAMD,GACtBE,EARW,EAQaX,E,KAI5B,SAASW,EAAcC,EAAUZ,GAC/B,OAAO,IAAIa,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACTP,GAAY,EACRI,EACFF,EAAQ,CAAEM,SAAAR,EAAUZ,UAGpBe,EAAO,CAAEK,SAAAR,EAAUZ,S,GAGpBA,E,IAIPW,EAAc,EAAG,MACdU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUpB,EAAKsB,EAALtB,MACjBwB,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAAN1B,EAAM,M,IAE3D2B,OAAM,SAAAL,G,IAAGM,EAAQN,EAARF,SAAUpB,EAAKsB,EAALtB,MAClBwB,QAAQC,IAAI,sBAAuCC,OAAfE,EAAS,QAAYF,OAAN1B,EAAM,M","sources":["src/js/03-i.js"],"sourcesContent":["// const { formats } = require('flatpickr/dist/utils/formatting');\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nlet position = 0;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const delay = Number(refs.delay.value);\n  const amount = Number(refs.amount.value);\n  for (let index = 0; index < amount; index++) {\n    const element = array[index];\n    createPromise(position, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      position += 1;\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// ----------------------------------------------------------\n\n// function onSubmit(e) {\n//   e.preventDefault();\n//   const delay = Number(refs.delay.value);\n//   createPromise(position, delay)\n//     .then(\n//       ({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//         return { position, delay };\n//       },\n//       ({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//         return { position, delay };\n//       }\n//     )\n//     .then(({ position, delay }) => {\n//       createPromiseSet(position, delay);\n//       return { position, delay };\n//     })\n//     .catch(({ position, delay }) => {\n//       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n// }\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       position += 1;\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//         // Fulfill\n//       } else {\n//         reject({ position, delay });\n//         // Reject\n//       }\n//     }, delay);\n//   });\n// }\n\nfunction onFulfill({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onReject({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["parcelRequire","$b5dd638b6bfd3b2d$var$refs","form","document","querySelector","delay","step","amount","btn","addEventListener","e","preventDefault","Number","value","index","array","$b5dd638b6bfd3b2d$var$createPromise","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","position2","console","log","concat","catch","position3"],"version":3,"file":"03-i.b0374398.js.map"}