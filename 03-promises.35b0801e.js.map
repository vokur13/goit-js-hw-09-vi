{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAGjCH,EAAKC,KAAKM,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAEC,iBACF,IAAIL,EAAQM,OAAOV,EAAKI,MAAMO,OAC9B,MAAML,EAASI,OAAOV,EAAKM,OAAOK,OAC5BN,EAAOK,OAAOV,EAAKK,KAAKM,OAC9B,IAAK,IAAIC,EAAQ,EAAGA,EAAQN,EAAQM,IAClCC,EAAWD,EAAQ,EACL,IAAVA,IAGFR,GAAgBC,GAElBS,EAAcD,EAAUT,GAAOW,KAAKC,GAAWC,MAAMC,E,IAdzD,IAAIL,EAAW,EAkBf,SAASC,EAAcK,EAAUf,GAC/B,OAAO,IAAIgB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,CAAEM,SAAAR,E,MAAUf,IAEpBkB,EAAO,CAAEK,SAAAR,E,MAAUf,GAAQ,GAG5BA,EAAM,G,CAIb,SAASY,GAAYW,SAAAC,EAAQxB,MAAEA,IAC7ByB,QAAQC,IAAI,uBAAqBF,QAAiBxB,OAClD2B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAqBL,QAAiBxB,M,CAEhE,SAASc,GAAWS,SAAAO,EAAQ9B,MAAEA,IAC5ByB,QAAQC,IAAI,sBAAoBI,QAAiB9B,OACjD2B,EAAAjC,GAASkC,OAAOG,QAAQ,sBAAoBD,QAAe9B,M","sources":["src/js/03-promises.js"],"sourcesContent":["// const { formats } = require('flatpickr/dist/utils/formatting');\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nlet position = 0;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.step.value);\n  for (let index = 0; index < amount; index++) {\n    position = index + 1;\n    if (index === 0) {\n      delay = delay;\n    } else {\n      delay = delay + step;\n    }\n    createPromise(position, delay).then(onFulfill).catch(onReject);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfill({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onReject({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","addEventListener","e","preventDefault","Number","value","index","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","then","$47d4ff9957288465$var$onFulfill","catch","$47d4ff9957288465$var$onReject","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","position2","console","log","$parcel$interopDefault","Notify","success","position3","failure"],"version":3,"file":"03-promises.35b0801e.js.map"}