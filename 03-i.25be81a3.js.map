{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAGjCH,EAAKC,KAAKM,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAEC,iBAIF,IAHA,IAAIL,EAAQM,OAAOV,EAAKI,MAAMO,OACxBL,EAASI,OAAOV,EAAKM,OAAOK,OAC5BN,EAAOK,OAAOV,EAAKK,KAAKM,OACrBC,EAAQ,EAAGA,EAAQN,EAAQM,IAEpB,IAAVA,IAGFR,GAAgBC,GAElBQ,EANWD,EAAQ,EAMKR,GAAOU,KAAKC,GAAWC,MAAMC,E,IAIzD,SAASJ,EAAcK,EAAUd,GAC/B,OAAO,IAAIe,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEM,SAAAR,EAAUd,UAEpBiB,EAAO,CAAEK,SAAAR,EAAUd,S,GAGpBA,E,IAIP,SAASW,EAAUY,G,IAAEC,EAAFD,EAAED,SAAUtB,EAAZuB,EAAYvB,MAC7ByB,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAAN3B,EAAM,OAC1D4B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCH,OAAfH,EAAS,QAAYG,OAAN3B,EAAM,M,CAExE,SAASa,EAASU,G,IAAEQ,EAAFR,EAAED,SAAUtB,EAAZuB,EAAYvB,MAC5ByB,QAAQC,IAAI,sBAAuCC,OAAfI,EAAS,QAAYJ,OAAN3B,EAAM,OACzD4B,EAAAlC,GAASmC,OAAOG,QAAQ,sBAAqCL,OAAfI,EAAS,QAAYJ,OAAN3B,EAAM,M","sources":["src/js/03-i.js"],"sourcesContent":["// const { formats } = require('flatpickr/dist/utils/formatting');\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nlet position = 0;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.step.value);\n  for (let index = 0; index < amount; index++) {\n    position = index + 1;\n    if (index === 0) {\n      delay = delay;\n    } else {\n      delay = delay + step;\n    }\n    createPromise(position, delay).then(onFulfill).catch(onReject);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfill({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onReject({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iU1Pc","parcelRequire","$b5dd638b6bfd3b2d$var$refs","form","document","querySelector","delay","step","amount","addEventListener","e","preventDefault","Number","value","index","$b5dd638b6bfd3b2d$var$createPromise","then","$b5dd638b6bfd3b2d$var$onFulfill","catch","$b5dd638b6bfd3b2d$var$onReject","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","param","position2","console","log","concat","$parcel$interopDefault","Notify","success","position3","failure"],"version":3,"file":"03-i.25be81a3.js.map"}